apiVersion: k8up.io/v1
kind: Restore
metadata:
  name: state-restore-from-local
  namespace: zhujq
spec:
  chain: test-chain-zenoh-overlord
  node: test-chain-zenoh-overlord-node0
  backup: state-backup-to-local
#  podSecurityContext:
#    runAsGroup: 1000
#    runAsUser: 1000
#    fsGroup: 1000
  restoreMethod:
    folder:
      claimName: datadir-test-chain-zenoh-overlord-node0-0

  backend:
    repoPasswordSecretRef:
      name: backup-repo
      key: password
    s3:
      endpoint: http://192.168.10.122:30289
      bucket: k8up-state
      accessKeyIDSecretRef:
        name: minio-credentials
        key: username
      secretAccessKeySecretRef:
        name: minio-credentials
        key: password
---
#apiVersion: k8up.io/v1
#kind: Restore
#metadata:
#  name: restore-s3
#spec:
#  restoreMethod:
#    s3:
#      endpoint: http://minio.minio:9000
#      bucket: restoremini
#      accessKeyIDSecretRef:
#        name: backup-credentials
#        key: username
#      secretAccessKeySecretRef:
#        name: backup-credentials
#        key: password
#  backend:
#    repoPasswordSecretRef:
#      name: backup-repo
#      key: password
#    s3:
#      endpoint: http://minio.minio:9000
#      bucket: k8up
#      accessKeyIDSecretRef:
#        name: backup-credentials
#        key: username
#      secretAccessKeySecretRef:
#        name: backup-credentials
#        key: password
#---
#apiVersion: k8up.io/v1
#kind: Restore
#metadata:
#  name: restore-s3-global
#spec:
#  restoreMethod:
#    s3: {}
#  backend:
#    s3: {}
#---
## Here we only override the restic password and the bucket from the global
## settings.
#apiVersion: k8up.io/v1
#kind: Restore
#metadata:
#  name: restore-s3-override
#spec:
#  restoreMethod:
#    s3:
#      bucket: k8up-restore
#  backend:
#    repoPasswordSecretRef:
#      key: repopw
#      name: repopw
#    s3:
#      bucket: k8up-namespace
